plugins {
    id 'org.springframework.boot' version '3.4.2'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.hendisantika'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

sourceCompatibility = 21
targetCompatibility = 21

sourceSets.main.java.srcDirs "src/generated-sources/java"
sourceSets.main.resources.excludes = ['user.xsd']

configurations {
    jaxb
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile("org.springframework.boot:spring-boot-starter-web-services")
    compile("wsdl4j:wsdl4j:1.6.3")
    jaxb (
            'com.sun.xml.bind:jaxb-xjc:4.0.5',
            'com.sun.xml.bind:jaxb-impl:4.0.5'
    )
}

task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/generated-sources/java")

    doLast {
        jaxbTargetDir.mkdirs()

        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )

        ant.jaxbTargetDir = jaxbTargetDir

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'com.hendisantika.soapproducer',
                schema: 'src/main/resources/xsd/user.xsd'
        )
    }
}

compileJava.dependsOn jaxb
